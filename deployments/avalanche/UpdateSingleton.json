{
  "address": "0x3d4D0CAb438cEe791B7405CF10448DAAa98087C0",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "singleton",
          "type": "address"
        }
      ],
      "name": "ChangedMasterCopy",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "self",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetSingleton",
          "type": "address"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x23211e245f477a51b6a01de1876d565146b513d7b27182a371cd184af1460de7",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x8d8a9Cf53b7D95C148cB159384D249F8FB68db3f",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "216467",
    "logsBloom": "0x
    "blockHash": "0x01b8a32ace4777ebc068afb88f1515c5b5f2b8a37f24d942888e9db37d842eb3",
    "transactionHash": "0x23211e245f477a51b6a01de1876d565146b513d7b27182a371cd184af1460de7",
    "logs": [],
    "blockNumber": 25892376,
    "cumulativeGasUsed": "347043",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9d82cabb0e73e3b1ad6421d18d2783c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"}],\"name\":\"ChangedMasterCopy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"self\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetSingleton\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gnosis/UpdateSingleton.sol\":\"UpdateSingleton\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@gnosis.pm/safe-contracts/contracts/examples/libraries/GnosisSafeStorage.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title GnosisSafeStorage - Storage layout of the Safe contracts to be used in libraries\\n/// @author Richard Meissner - <richard@gnosis.io>\\ncontract GnosisSafeStorage {\\n    // From /common/Singleton.sol\\n    address internal singleton;\\n    // From /common/ModuleManager.sol\\n    mapping(address => address) internal modules;\\n    // From /common/OwnerManager.sol\\n    mapping(address => address) internal owners;\\n    uint256 internal ownerCount;\\n    uint256 internal threshold;\\n\\n    // From /GnosisSafe.sol\\n    bytes32 internal nonce;\\n    bytes32 internal domainSeparator;\\n    mapping(bytes32 => uint256) internal signedMessages;\\n    mapping(address => mapping(bytes32 => uint256)) internal approvedHashes;\\n}\\n\",\"keccak256\":\"0xecfd0d8a43d859ef1fb8161cb21ce5d38461603383378a5b1c4c7d5d4a3bfbf3\",\"license\":\"LGPL-3.0-only\"},\"contracts/gnosis/UpdateSingleton.sol\":{\"content\":\"// SPDX-License-Identifier: GPL\\npragma solidity ^0.8.7;\\nimport \\\"@gnosis.pm/safe-contracts/contracts/examples/libraries/GnosisSafeStorage.sol\\\";\\n\\n// adopted from: https://github.com/safe-global/safe-contracts/blob/main/contracts/examples/libraries/Migrate_1_3_0_to_1_2_0.sol\\ncontract UpdateSingleton is GnosisSafeStorage {\\n    address public immutable self;\\n\\n    constructor() {\\n        self = address(this);\\n    }\\n\\n    event ChangedMasterCopy(address singleton);\\n\\n    bytes32 private guard;\\n\\n    function update(address targetSingleton) public {\\n        require(targetSingleton != address(0), \\\"Invalid singleton address provided\\\");\\n\\n        // Can only be called via a delegatecall.\\n        require(address(this) != self, \\\"Migration should only be called via delegatecall\\\");\\n\\n        singleton = targetSingleton;\\n        emit ChangedMasterCopy(singleton);\\n    }\\n}\",\"keccak256\":\"0xecb8be3fd47564e37ad6ddac59eff9ea8e0e8f76422948c91f32387c5825fa0f\",\"license\":\"GPL\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50306080526080516102f9610036600039600081816055015261015f01526102f96000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631c1b87721461003b5780637104ddb214610050575b600080fd5b61004e610049366004610286565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff8116610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f76696460448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4d6967726174696f6e2073686f756c64206f6e6c792062652063616c6c65642060448201527f7669612064656c656761746563616c6c00000000000000000000000000000000606482015260840161013f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b89060200160405180910390a150565b60006020828403121561029857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102bc57600080fd5b939250505056fea2646970667358221220af44bb35a792f7f56401c8db57361e79c9d05524c837214974f6ab823ea9fc6064736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631c1b87721461003b5780637104ddb214610050575b600080fd5b61004e610049366004610286565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b73ffffffffffffffffffffffffffffffffffffffff8116610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f76696460448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4d6967726174696f6e2073686f756c64206f6e6c792062652063616c6c65642060448201527f7669612064656c656761746563616c6c00000000000000000000000000000000606482015260840161013f565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b89060200160405180910390a150565b60006020828403121561029857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102bc57600080fd5b939250505056fea2646970667358221220af44bb35a792f7f56401c8db57361e79c9d05524c837214974f6ab823ea9fc6064736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2153,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "singleton",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2157,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "modules",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2161,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "owners",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2163,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "ownerCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2165,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "threshold",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2167,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "nonce",
        "offset": 0,
        "slot": "5",
        "type": "t_bytes32"
      },
      {
        "astId": 2169,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "domainSeparator",
        "offset": 0,
        "slot": "6",
        "type": "t_bytes32"
      },
      {
        "astId": 2173,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "signedMessages",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 2179,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "approvedHashes",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
      },
      {
        "astId": 15325,
        "contract": "contracts/gnosis/UpdateSingleton.sol:UpdateSingleton",
        "label": "guard",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}